[{"C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\index.js":"1","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\reportWebVitals.js":"2","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\app\\App.js":"3","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Frontpage\\frontpage.js":"4","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Mentor\\mentor.js":"5","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Kanban\\kanban.js":"6","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Tasks\\tasks.js":"7","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\Repository\\Repository.js":"8","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\navbar\\Navbar.js":"9","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Forum\\forum.js":"10","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Task item\\taskItem.js":"11"},{"size":579,"mtime":1632588008340,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1632587102882,"results":"14","hashOfConfig":"13"},{"size":4943,"mtime":1632588008338,"results":"15","hashOfConfig":"13"},{"size":250,"mtime":1632588008330,"results":"16","hashOfConfig":"13"},{"size":2720,"mtime":1632588008333,"results":"17","hashOfConfig":"13"},{"size":1831,"mtime":1632588008331,"results":"18","hashOfConfig":"13"},{"size":1583,"mtime":1632588008337,"results":"19","hashOfConfig":"13"},{"size":16876,"mtime":1632591622655,"results":"20","hashOfConfig":"13"},{"size":1498,"mtime":1632588008339,"results":"21","hashOfConfig":"13"},{"size":648,"mtime":1632588008329,"results":"22","hashOfConfig":"13"},{"size":557,"mtime":1632591797033,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"yxqwum",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\index.js",[],["54","55"],"C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\reportWebVitals.js",[],"C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\app\\App.js",["56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"import './App.css';\r\nimport React, {Component} from \"react\";\r\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom';\r\nimport Navbar from '../navbar/Navbar';\r\nimport Forum from '../Forum/forum';\r\nimport Frontpage from '../Frontpage/frontpage';\r\nimport Kanban from '../Kanban/kanban';\r\nimport Mentor from '../Mentor/mentor';\r\nimport Tasks from '../Tasks/tasks';\r\nimport Repository from \"../../Repository/Repository\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            cilds: [],\r\n            parents: [],\r\n            f_tasks: [],\r\n            d_tasks: [],\r\n            posts: [],\r\n            current_user: {\r\n                \"ID\" : 5\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n\r\n            <Router>\r\n                <Navbar/>\r\n                <main>\r\n                    <div className=\"container\">\r\n\r\n                        <Route path={\"/\"} exact render={() =>\r\n                            <Frontpage/> } />\r\n\r\n                        <Route path={\"/Mentor\"} exact render={() =>\r\n                            <Mentor user = {this.state.current_user}\r\n                                    f_tasks = {this.state.f_tasks.filter(task => task.childID == this.state.current_user.ID)}\r\n                                    d_tasks = {this.state.d_tasks}/> } />\r\n\r\n                        <Route path={\"/Tasks\"} exact render={() =>\r\n                            <Tasks pending_tasks = {this.state.f_tasks.filter(item => item.isDone == 0 && item.childID == this.state.current_user.ID) }\r\n                                   d_tasks = {this.state.d_tasks}/> } />\r\n\r\n                        <Route path={\"/Board\"} exact render={() =>\r\n                            <Kanban tasks = {this.state.f_tasks}\r\n                                    count_un_finished = {this.state.f_tasks.filter(item => item.isDone == 0 && item.childID == this.state.current_user.ID).length}\r\n                                    count_finished = {this.state.f_tasks.filter(item => item.isDone == 1 && item.childID == this.state.current_user.ID).length}\r\n                                    points = {this.state.f_tasks.filter(item => item.isDone == 1 && item.childID == this.state.current_user.ID)\r\n                                                                .map(term => ({\r\n                                                                  \"p\": this.state.d_tasks.find(d_id => d_id == term.taskID).points\r\n                                                                })\r\n                                                                )//.reduce((a, b) => ({sum: a.p + b.p}))\r\n                                    }\r\n                                    map_by_users = {this.state.cilds.map(term => (\r\n                                        {\r\n                                            \"userID\": term.ID,\r\n                                            \"name_surname\": term.name + \" \" + term.surname,\r\n                                            \"finished_tasks\": this.state.f_tasks.filter(item => item.isDone == 1 && item.childID == term.ID).length,\r\n                                            \"un_finished_tasks\": this.state.f_tasks.filter(item => item.isDone == 0 && item.childID == term.ID).length\r\n                                            // \"points\": this.state.d_tasks.filter(dimension =>\r\n                                            //     this.state.f_tasks.filter(item => item.isDone == 1 && item.childID == term.ID)\r\n                                            //                         .find(item_id => item_id.taskID = dimension.ID) !== undefined)\r\n                                            //     .reduce((a, b) => ({sum: a.points + b.points}))\r\n                                        }\r\n                                    ))\r\n                                    }/> }\r\n                        />\r\n\r\n                        <Route path={\"/Forum\"} exact render={() =>\r\n                            <Forum posts = {this.state.posts}/> } />\r\n\r\n\r\n                    </div>\r\n                </main>\r\n            </Router>\r\n\r\n            )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadChlds();\r\n        this.loadParents();\r\n        this.loadDtasks();\r\n        this.loadFtasks();\r\n        this.loadPosts()\r\n    }\r\n\r\n    loadChlds = () => {\r\n        this.setState({\r\n            cilds: Repository.getChildUSers()\r\n        })\r\n\r\n    }\r\n    loadParents = () => {\r\n        this.setState({\r\n            parents: Repository.getParentUSers()\r\n        })\r\n    }\r\n    loadFtasks = () => {\r\n        this.setState({\r\n            f_tasks: Repository.getF_Tasks()\r\n        })\r\n    }\r\n    loadDtasks = () => {\r\n        this.setState({\r\n            d_tasks: Repository.getD_Tasks()\r\n        })\r\n    }\r\n    loadPosts = () => {\r\n        this.setState({\r\n            posts: Repository.getForumPosts()\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Frontpage\\frontpage.js",["71"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst frontpage = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={\"container\"}>\r\n            <h1>Frontpage</h1>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default frontpage;\r\n","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Mentor\\mentor.js",["72","73","74","75","76"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst mentor = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={\"container\"}>\r\n            <h2>Досегашни задачи</h2>\r\n            <table className=\"table-responsive table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Тип</th>\r\n                    <th scope=\"col\">Опис</th>\r\n                    <th scope=\"col\">Поени</th>\r\n                    <th scope=\"col\">Решена</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                {props.f_tasks.map((term) => {\r\n                    return (\r\n                        <tr>\r\n                            <th scope=\"row\">{props.d_tasks.find(dTask => dTask.ID == term.taskID).ID}</th>\r\n                            <td>{props.d_tasks.find(dTask => dTask.ID == term.taskID).type}</td>\r\n                            <td>{props.d_tasks.find(dTask => dTask.ID == term.taskID).desc}</td>\r\n                            <td>{props.d_tasks.find(dTask => dTask.ID == term.taskID).points}</td>\r\n                            <td>{term.isDone}</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n                }\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className={\"row\"}>\r\n                <div className={\"container col-md-6 py-3\"}>\r\n                    <h2>Задачи:</h2>\r\n                    {props.d_tasks.map((term) => {\r\n                        return (\r\n                            <div className={\"container w-100 p-1 m-2 bg-info\"}>\r\n                                <h3>{term.type}</h3>\r\n                                <p>{term.desc}</p>\r\n                                <hr/>\r\n                                <p>Поени: {term.points}</p>\r\n                            </div>\r\n                        );\r\n                    })\r\n                    }\r\n                </div>\r\n                <div className={\"container col-md-6 py-3\"}>\r\n                    <h2>Избрани адачи:</h2>\r\n                    {props.d_tasks.map((term) => {\r\n                        return (\r\n                            <div className={\"container w-100 p-1 m-2 bg-info\"}>\r\n                                <h3>{term.type}</h3>\r\n                                <p>{term.desc}</p>\r\n                                <hr/>\r\n                                <p>Поени: {term.points}</p>\r\n                            </div>\r\n                        );\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default mentor;\r\n","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Kanban\\kanban.js",["77"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst kanban = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={\"container\"}>\r\n            <h1>Kanban</h1>\r\n            <div className={\"row\"}>\r\n                <div className={\"container col-md-8\"}>\r\n\r\n                </div>\r\n                <div className={\"container col-md-4\"}>\r\n                    <ul>\r\n                        <li>Завршени задачи {props.count_finished}</li>\r\n                        <li>НЕ Завршени задачи {props.count_un_finished}</li>\r\n                        <li>Вкупно поени {props.points}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <table className=\"table-responsive table-hover\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">ID</th>\r\n                    <th scope=\"col\">Име Презиме</th>\r\n                    <th scope=\"col\">Завршени задачи</th>\r\n                    <th scope=\"col\">НЕ Завршени задачи</th>\r\n                    <th scope=\"col\">Вкупно поени</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                {props.map_by_users.map((term) => {\r\n                    return (\r\n                        <tr>\r\n                            <th scope=\"row\">{term.userID}</th>\r\n                            <td>{term.name_surname}</td>\r\n                            <td>{term.finished_tasks}</td>\r\n                            <td>{term.un_finished_tasks}</td>\r\n                            <td>term.points.sum</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default kanban;\r\n","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Tasks\\tasks.js",["78","79","80"],"import React, {Component} from \"react\";\r\nimport Task from '../Task item/taskItem'\r\nimport './tasks.css'\r\n\r\nclass Tasks extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected_task: {\r\n                \"taskID\": 0,\r\n                \"childID\": 0,\r\n                \"isDone\": 0\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className={\"row col-md-12\"}>\r\n                <div className={\"container pending_tasks col-md-4\"}>\r\n                    {this.props.pending_tasks.map((term) => {\r\n                        return (\r\n                            <div className={\"container w-100 p-1 m-2 bg-info\"} >\r\n                                <p>{this.props.d_tasks.find(dTask => dTask.ID == term.taskID).desc}</p>\r\n                                <hr/>\r\n                                <p>Поени: {this.props.d_tasks.find(dTask => dTask.ID == term.taskID).points}</p>\r\n                                <button onClick={() => this.openTask(term)}>Решавај</button>\r\n                            </div>\r\n                        );\r\n                    })\r\n                    }\r\n                </div>\r\n                <div className={\"container col-md-8\"}>\r\n                        <Task task={this.props.d_tasks.find(dTask => dTask.ID == this.state.selected_task.taskID) }/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n     openTask(object) {\r\n        this.setState({\r\n            selected_task: object\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default Tasks;\r\n","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\Repository\\Repository.js",[],"C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\navbar\\Navbar.js",[],"C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Forum\\forum.js",["81"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst forum = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={\"container\"}>\r\n            <h1>Форум</h1>\r\n            <div className={\"container p-2 \"}>\r\n                {props.posts.map((term) => {\r\n                    return (\r\n                        <div className={\"container p-1\"}>\r\n\r\n                            <h2>{term.Title}</h2>\r\n                            <h6>{term.Text}</h6>\r\n\r\n\r\n                        </div>\r\n                    );\r\n                })\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default forum;\r\n","C:\\Users\\NOVICA\\Desktop\\LearnProject\\src\\components\\Task item\\taskItem.js",["82"],"import React from 'react';\r\n\r\nimport './taskitem.css';\r\n\r\nconst task = (props) => {\r\n\r\n    return (\r\n        <div className={\"container col-md-10 task\"}>\r\n\r\n            <h2>Helloo</h2>\r\n\r\n                    <div className={\"container w-100 p-1 m-2 bg-info\"} >\r\n                        <p>{props.task.desc}</p>\r\n                        <hr/>\r\n                        <p>Поени: {props.task.points}</p>\r\n                        <img source={props.task.solution}></img>\r\n                    </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default task;\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":34,"nodeType":"89","messageId":"90","endLine":3,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":42,"column":95,"nodeType":"93","messageId":"94","endLine":42,"endColumn":97},{"ruleId":"91","severity":1,"message":"92","line":46,"column":99,"nodeType":"93","messageId":"94","endLine":46,"endColumn":101},{"ruleId":"91","severity":1,"message":"92","line":46,"column":120,"nodeType":"93","messageId":"94","endLine":46,"endColumn":122},{"ruleId":"91","severity":1,"message":"92","line":51,"column":104,"nodeType":"93","messageId":"94","endLine":51,"endColumn":106},{"ruleId":"91","severity":1,"message":"92","line":51,"column":125,"nodeType":"93","messageId":"94","endLine":51,"endColumn":127},{"ruleId":"91","severity":1,"message":"92","line":52,"column":101,"nodeType":"93","messageId":"94","endLine":52,"endColumn":103},{"ruleId":"91","severity":1,"message":"92","line":52,"column":122,"nodeType":"93","messageId":"94","endLine":52,"endColumn":124},{"ruleId":"91","severity":1,"message":"92","line":53,"column":93,"nodeType":"93","messageId":"94","endLine":53,"endColumn":95},{"ruleId":"91","severity":1,"message":"92","line":53,"column":114,"nodeType":"93","messageId":"94","endLine":53,"endColumn":116},{"ruleId":"91","severity":1,"message":"92","line":55,"column":109,"nodeType":"93","messageId":"94","endLine":55,"endColumn":111},{"ruleId":"91","severity":1,"message":"92","line":63,"column":109,"nodeType":"93","messageId":"94","endLine":63,"endColumn":111},{"ruleId":"91","severity":1,"message":"92","line":63,"column":130,"nodeType":"93","messageId":"94","endLine":63,"endColumn":132},{"ruleId":"91","severity":1,"message":"92","line":64,"column":112,"nodeType":"93","messageId":"94","endLine":64,"endColumn":114},{"ruleId":"91","severity":1,"message":"92","line":64,"column":133,"nodeType":"93","messageId":"94","endLine":64,"endColumn":135},{"ruleId":"87","severity":1,"message":"95","line":2,"column":9,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"87","severity":1,"message":"95","line":2,"column":9,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"91","severity":1,"message":"92","line":25,"column":83,"nodeType":"93","messageId":"94","endLine":25,"endColumn":85},{"ruleId":"91","severity":1,"message":"92","line":26,"column":71,"nodeType":"93","messageId":"94","endLine":26,"endColumn":73},{"ruleId":"91","severity":1,"message":"92","line":27,"column":71,"nodeType":"93","messageId":"94","endLine":27,"endColumn":73},{"ruleId":"91","severity":1,"message":"92","line":28,"column":71,"nodeType":"93","messageId":"94","endLine":28,"endColumn":73},{"ruleId":"87","severity":1,"message":"95","line":2,"column":9,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"91","severity":1,"message":"92","line":28,"column":79,"nodeType":"93","messageId":"94","endLine":28,"endColumn":81},{"ruleId":"91","severity":1,"message":"92","line":30,"column":86,"nodeType":"93","messageId":"94","endLine":30,"endColumn":88},{"ruleId":"91","severity":1,"message":"92","line":38,"column":79,"nodeType":"93","messageId":"94","endLine":38,"endColumn":81},{"ruleId":"87","severity":1,"message":"95","line":2,"column":9,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"96","severity":1,"message":"97","line":16,"column":25,"nodeType":"98","endLine":16,"endColumn":59},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]